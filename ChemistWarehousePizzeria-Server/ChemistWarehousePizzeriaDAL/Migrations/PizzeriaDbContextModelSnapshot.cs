// <auto-generated />
using System;
using ChemistWarehousePizzeria.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChemistWarehousePizzeria.Migrations
{
    [DbContext(typeof(PizzeriaDbContext))]
    partial class PizzeriaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Location_Id");

                    b.ToTable("Location", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wyndhamvale"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Docklands"
                        });
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PizzeriaId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Menu_Id");

                    b.HasIndex("PizzeriaId");

                    b.ToTable("Menu", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Main Menu",
                            PizzeriaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Main Menu",
                            PizzeriaId = 2
                        });
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Toppings")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id")
                        .HasName("PK_Pizza_Id");

                    b.ToTable("Pizza", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Veg-SpicyPanner",
                            Toppings = "Cheese, Capsicum, Panner, Olives,Cherry Tomatoes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "VegManorama",
                            Toppings = "Cheese, Capsicum, Chilli"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Margherita",
                            Toppings = "Cheese, Spinach, Cherry Tomatoes"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mushroom",
                            Toppings = "Cheese, Mushrooms, Capsicum, Onion, Olives"
                        });
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.PizzaMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_PizzaMen_Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaMenu", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuId = 1,
                            PizzaId = 1
                        },
                        new
                        {
                            Id = 2,
                            MenuId = 1,
                            PizzaId = 2
                        },
                        new
                        {
                            Id = 3,
                            MenuId = 1,
                            PizzaId = 3
                        },
                        new
                        {
                            Id = 4,
                            MenuId = 2,
                            PizzaId = 1
                        },
                        new
                        {
                            Id = 5,
                            MenuId = 2,
                            PizzaId = 4
                        });
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Pizzeria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Pizzeria_Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Pizzeria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 1,
                            Name = "PizzaHouse WyndhamVale"
                        },
                        new
                        {
                            Id = 2,
                            LocationId = 2,
                            Name = "PizzaHouse Docklands"
                        });
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("PizzaId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK_Price_Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("PizzaId");

                    b.ToTable("Price", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 1,
                            PizzaId = 1,
                            Value = 20m
                        },
                        new
                        {
                            Id = 2,
                            LocationId = 1,
                            PizzaId = 2,
                            Value = 18m
                        },
                        new
                        {
                            Id = 3,
                            LocationId = 1,
                            PizzaId = 3,
                            Value = 22m
                        },
                        new
                        {
                            Id = 4,
                            LocationId = 2,
                            PizzaId = 1,
                            Value = 25m
                        },
                        new
                        {
                            Id = 5,
                            LocationId = 2,
                            PizzaId = 4,
                            Value = 17m
                        });
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Menu", b =>
                {
                    b.HasOne("ChemistWarehousePizzeria.Models.Pizzeria", "Pizzeria")
                        .WithMany("Menus")
                        .HasForeignKey("PizzeriaId")
                        .HasConstraintName("FK_Menu_PizzeriaId");

                    b.Navigation("Pizzeria");
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.PizzaMenu", b =>
                {
                    b.HasOne("ChemistWarehousePizzeria.Models.Menu", "Menu")
                        .WithMany("PizzaMenus")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK_PizzaMenu_MenuId");

                    b.HasOne("ChemistWarehousePizzeria.Models.Pizza", "Pizza")
                        .WithMany("PizzaMenus")
                        .HasForeignKey("PizzaId")
                        .IsRequired()
                        .HasConstraintName("FK_PizzaMenu_PizzaId");

                    b.Navigation("Menu");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Pizzeria", b =>
                {
                    b.HasOne("ChemistWarehousePizzeria.Models.Location", "Location")
                        .WithMany("Pizzeria")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_Pizzeria_LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Price", b =>
                {
                    b.HasOne("ChemistWarehousePizzeria.Models.Location", "Location")
                        .WithMany("Prices")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_Price_LocationId");

                    b.HasOne("ChemistWarehousePizzeria.Models.Pizza", "Pizza")
                        .WithMany("Prices")
                        .HasForeignKey("PizzaId")
                        .HasConstraintName("FK_Price_PizzaId");

                    b.Navigation("Location");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Location", b =>
                {
                    b.Navigation("Pizzeria");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Menu", b =>
                {
                    b.Navigation("PizzaMenus");
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Pizza", b =>
                {
                    b.Navigation("PizzaMenus");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("ChemistWarehousePizzeria.Models.Pizzeria", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
